

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Sep 14 09:53:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17   000000                     
    18                           ; Generated 17/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4620 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataCOMRAM
    54   00111C                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for _lat_registers
    58   00111C  89                 	db	137
    59   00111D  0F                 	db	15
    60   00111E  8A                 	db	138
    61   00111F  0F                 	db	15
    62   001120  8B                 	db	139
    63   001121  0F                 	db	15
    64   001122  8C                 	db	140
    65   001123  0F                 	db	15
    66   001124  8D                 	db	141
    67   001125  0F                 	db	15
    68                           
    69                           ;initializer for _port_registers
    70   001126  80                 	db	128
    71   001127  0F                 	db	15
    72   001128  81                 	db	129
    73   001129  0F                 	db	15
    74   00112A  82                 	db	130
    75   00112B  0F                 	db	15
    76   00112C  83                 	db	131
    77   00112D  0F                 	db	15
    78   00112E  84                 	db	132
    79   00112F  0F                 	db	15
    80                           
    81                           ;initializer for _tris_registers
    82   001130  92                 	db	146
    83   001131  0F                 	db	15
    84   001132  93                 	db	147
    85   001133  0F                 	db	15
    86   001134  94                 	db	148
    87   001135  0F                 	db	15
    88   001136  95                 	db	149
    89   001137  0F                 	db	15
    90   001138  96                 	db	150
    91   001139  0F                 	db	15
    92   000000                     _EECON2	set	4007
    93   000000                     _EECON1bits	set	4006
    94   000000                     _EEDATA	set	4008
    95   000000                     _EEADR	set	4009
    96   000000                     _EEADRH	set	4010
    97   000000                     _INTCONbits	set	4082
    98   000000                     _LATA	set	3977
    99   000000                     _PORTE	set	3972
   100   000000                     _PORTD	set	3971
   101   000000                     _PORTC	set	3970
   102   000000                     _PORTB	set	3969
   103   000000                     _PORTA	set	3968
   104   000000                     _TRISA	set	3986
   105   000000                     _TRISE	set	3990
   106   000000                     _TRISD	set	3989
   107   000000                     _TRISC	set	3988
   108   000000                     _TRISB	set	3987
   109   000000                     _LATE	set	3981
   110   000000                     _LATD	set	3980
   111   000000                     _LATC	set	3979
   112   000000                     _LATB	set	3978
   113                           
   114                           ; #config settings
   115                           
   116                           	psect	cinit
   117   0010EE                     __pcinit:
   118                           	callstack 0
   119   0010EE                     start_initialization:
   120                           	callstack 0
   121   0010EE                     __initialization:
   122                           	callstack 0
   123                           
   124                           ; Initialize objects allocated to COMRAM (30 bytes)
   125                           ; load TBLPTR registers with __pidataCOMRAM
   126   0010EE  0E1C               	movlw	low __pidataCOMRAM
   127   0010F0  6EF6               	movwf	tblptrl,c
   128   0010F2  0E11               	movlw	high __pidataCOMRAM
   129   0010F4  6EF7               	movwf	tblptrh,c
   130   0010F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   131   0010F8  6EF8               	movwf	tblptru,c
   132   0010FA  EE00  F001         	lfsr	0,__pdataCOMRAM
   133   0010FE  EE10 F01E          	lfsr	1,30
   134   001102                     copy_data0:
   135   001102  0009               	tblrd		*+
   136   001104  CFF5 FFEE          	movff	tablat,postinc0
   137   001108  50E5               	movf	postdec1,w,c
   138   00110A  50E1               	movf	fsr1l,w,c
   139   00110C  E1FA               	bnz	copy_data0
   140                           
   141                           ; Clear objects allocated to COMRAM (2 bytes)
   142   00110E  6A26               	clrf	(__pbssCOMRAM+1)& (0+255),c
   143   001110  6A25               	clrf	__pbssCOMRAM& (0+255),c
   144   001112                     end_of_initialization:
   145                           	callstack 0
   146   001112                     __end_of__initialization:
   147                           	callstack 0
   148   001112  0E00               	movlw	low (__Lmediumconst shr (0+16))
   149   001114  6EF8               	movwf	tblptru,c
   150   001116  0100               	movlb	0
   151   001118  EF01  F008         	goto	_main	;jump to C main() function
   152                           
   153                           	psect	bssCOMRAM
   154   000025                     __pbssCOMRAM:
   155                           	callstack 0
   156   000025                     _writeData:
   157                           	callstack 0
   158   000025                     	ds	1
   159   000026                     _readData:
   160                           	callstack 0
   161   000026                     	ds	1
   162                           
   163                           	psect	dataCOMRAM
   164   000001                     __pdataCOMRAM:
   165                           	callstack 0
   166   000001                     _lat_registers:
   167                           	callstack 0
   168   000001                     	ds	10
   169   00000B                     _port_registers:
   170                           	callstack 0
   171   00000B                     	ds	10
   172   000015                     _tris_registers:
   173                           	callstack 0
   174   000015                     	ds	10
   175                           
   176                           	psect	cstackCOMRAM
   177   00001F                     __pcstackCOMRAM:
   178                           	callstack 0
   179   00001F                     EEPROM_WriteByte@address:
   180                           	callstack 0
   181   00001F                     EEPROM_ReadByte@address:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0x0
   185   00001F                     	ds	2
   186   000021                     EEPROM_WriteByte@data:
   187                           	callstack 0
   188   000021                     EEPROM_ReadByte@data:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x2
   192   000021                     	ds	1
   193   000022                     EEPROM_WriteByte@state_interrupt:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x3
   197   000022                     	ds	1
   198   000023                     ??_main:
   199                           
   200                           ; 1 bytes @ 0x4
   201   000023                     	ds	2
   202                           
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 17 in file "project.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   225 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   226 ;;Total ram usage:        2 bytes
   227 ;; Hardware stack levels required when called: 1
   228 ;; This function calls:
   229 ;;		_EEPROM_ReadByte
   230 ;;		_EEPROM_WriteByte
   231 ;;		_initialization
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	text0
   238   001002                     __ptext0:
   239                           	callstack 0
   240   001002                     _main:
   241                           	callstack 30
   242   001002                     
   243                           ;project.c: 18:     initialization();
   244   001002  EC9D  F008         	call	_initialization	;wreg free
   245   001006                     
   246                           ;project.c: 19:     EEPROM_WriteByte(0x3ff, writeData);
   247   001006  0E03               	movlw	3
   248   001008  6E20               	movwf	(EEPROM_WriteByte@address+1)^0,c
   249   00100A  681F               	setf	EEPROM_WriteByte@address^0,c
   250   00100C  C025  F021         	movff	_writeData,EEPROM_WriteByte@data	;volatile
   251   001010  EC3B  F008         	call	_EEPROM_WriteByte	;wreg free
   252   001014                     
   253                           ;project.c: 20:     EEPROM_ReadByte(0x3ff, &readData);
   254   001014  0E03               	movlw	3
   255   001016  6E20               	movwf	(EEPROM_ReadByte@address+1)^0,c
   256   001018  681F               	setf	EEPROM_ReadByte@address^0,c
   257   00101A  0E26               	movlw	low _readData
   258   00101C  6E21               	movwf	EEPROM_ReadByte@data^0,c
   259   00101E  EC5D  F008         	call	_EEPROM_ReadByte	;wreg free
   260   001022                     l1095:
   261                           
   262                           ;project.c: 22:         _delay((unsigned long)((250)*(80000000UL/4000.0)));
   263   001022  0E1A               	movlw	26
   264   001024  6E24               	movwf	(??_main+1)^0,c
   265   001026  0E5E               	movlw	94
   266   001028  6E23               	movwf	??_main^0,c
   267   00102A  0E6E               	movlw	110
   268   00102C                     u397:
   269   00102C  2EE8               	decfsz	wreg,f,c
   270   00102E  D7FE               	bra	u397
   271   001030  2E23               	decfsz	??_main^0,f,c
   272   001032  D7FC               	bra	u397
   273   001034  2E24               	decfsz	(??_main+1)^0,f,c
   274   001036  D7FA               	bra	u397
   275   001038  D000               	nop2	
   276   00103A                     
   277                           ;project.c: 23:         EEPROM_WriteByte(0x3ff, ++writeData);
   278   00103A  0E03               	movlw	3
   279   00103C  6E20               	movwf	(EEPROM_WriteByte@address+1)^0,c
   280   00103E  681F               	setf	EEPROM_WriteByte@address^0,c
   281   001040  2A25               	incf	_writeData^0,f,c	;volatile
   282   001042  C025  F021         	movff	_writeData,EEPROM_WriteByte@data	;volatile
   283   001046  EC3B  F008         	call	_EEPROM_WriteByte	;wreg free
   284   00104A                     
   285                           ;project.c: 24:         EEPROM_ReadByte(0x3ff, &readData);
   286   00104A  0E03               	movlw	3
   287   00104C  6E20               	movwf	(EEPROM_ReadByte@address+1)^0,c
   288   00104E  681F               	setf	EEPROM_ReadByte@address^0,c
   289   001050  0E26               	movlw	low _readData
   290   001052  6E21               	movwf	EEPROM_ReadByte@data^0,c
   291   001054  EC5D  F008         	call	_EEPROM_ReadByte	;wreg free
   292   001058                     
   293                           ;project.c: 25:         if(writeData == 20){
   294   001058  0E14               	movlw	20
   295   00105A  1825               	xorwf	_writeData^0,w,c	;volatile
   296   00105C  A4D8               	btfss	status,2,c
   297   00105E  EF33  F008         	goto	u381
   298   001062  EF35  F008         	goto	u380
   299   001066                     u381:
   300   001066  EF11  F008         	goto	l1095
   301   00106A                     u380:
   302   00106A                     
   303                           ;project.c: 26:             writeData = 0;
   304   00106A  0E00               	movlw	0
   305   00106C  6E25               	movwf	_writeData^0,c	;volatile
   306   00106E  EF11  F008         	goto	l1095
   307   001072  EF00  F000         	goto	start
   308   001076                     __end_of_main:
   309                           	callstack 0
   310                           
   311 ;; *************** function _initialization *****************
   312 ;; Defined at:
   313 ;;		line 33 in file "project.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		None
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;Total ram usage:        0 bytes
   332 ;; Hardware stack levels used: 1
   333 ;; This function calls:
   334 ;;		Nothing
   335 ;; This function is called by:
   336 ;;		_main
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text1
   341   00113A                     __ptext1:
   342                           	callstack 0
   343   00113A                     _initialization:
   344                           	callstack 30
   345   00113A  0012               	return		;funcret
   346   00113C                     __end_of_initialization:
   347                           	callstack 0
   348                           
   349 ;; *************** function _EEPROM_WriteByte *****************
   350 ;; Defined at:
   351 ;;		line 2 in file "MCAL/EEPROM/mcal_eeprom.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;  address         2    0[COMRAM] unsigned short 
   354 ;;  data            1    2[COMRAM] unsigned char 
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  state_interr    1    3[COMRAM] unsigned char 
   357 ;;  ret             1    0        unsigned char 
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      unsigned char 
   360 ;; Registers used:
   361 ;;		wreg, status,2, status,0
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   367 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;Total ram usage:        4 bytes
   372 ;; Hardware stack levels used: 1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text2
   381   001076                     __ptext2:
   382                           	callstack 0
   383   001076                     _EEPROM_WriteByte:
   384                           	callstack 30
   385   001076                     
   386                           ;MCAL/EEPROM/mcal_eeprom.c: 6:     uint8 state_interrupt = INTCONbits.GIE;
   387   001076  0E00               	movlw	0
   388   001078  BEF2               	btfsc	242,7,c	;volatile
   389   00107A  0E01               	movlw	1
   390   00107C  6E22               	movwf	EEPROM_WriteByte@state_interrupt^0,c
   391   00107E                     
   392                           ;MCAL/EEPROM/mcal_eeprom.c: 9:     EEADRH = (uint8)((address >> 8) & 0x03);
   393   00107E  5020               	movf	(EEPROM_WriteByte@address+1)^0,w,c
   394   001080  0B03               	andlw	3
   395   001082  6EAA               	movwf	170,c	;volatile
   396   001084                     
   397                           ;MCAL/EEPROM/mcal_eeprom.c: 10:     EEADR = (((uint8)address) & 0xFF);
   398   001084  C01F  FFA9         	movff	EEPROM_WriteByte@address,4009	;volatile
   399   001088                     
   400                           ;MCAL/EEPROM/mcal_eeprom.c: 13:     EEDATA = data;
   401   001088  C021  FFA8         	movff	EEPROM_WriteByte@data,4008	;volatile
   402   00108C                     
   403                           ;MCAL/EEPROM/mcal_eeprom.c: 16:     (EECON1bits.EEPGD = 0);
   404   00108C  9EA6               	bcf	166,7,c	;volsfr
   405   00108E                     
   406                           ;MCAL/EEPROM/mcal_eeprom.c: 19:     (EECON1bits.CFGS = 0);
   407   00108E  9CA6               	bcf	166,6,c	;volsfr
   408   001090                     
   409                           ;MCAL/EEPROM/mcal_eeprom.c: 23:     (EECON1bits.WREN = 1);
   410   001090  84A6               	bsf	166,2,c	;volsfr
   411   001092                     
   412                           ;MCAL/EEPROM/mcal_eeprom.c: 27:     (INTCONbits.GIE = 0);
   413   001092  9EF2               	bcf	242,7,c	;volatile
   414   001094                     
   415                           ;MCAL/EEPROM/mcal_eeprom.c: 31:     EECON2 = 0x55;
   416   001094  0E55               	movlw	85
   417   001096  6EA7               	movwf	167,c	;volsfr
   418   001098                     
   419                           ;MCAL/EEPROM/mcal_eeprom.c: 32:     EECON2 = 0xAA;
   420   001098  0EAA               	movlw	170
   421   00109A  6EA7               	movwf	167,c	;volsfr
   422   00109C                     
   423                           ;MCAL/EEPROM/mcal_eeprom.c: 35:     (EECON1bits.WR = 1);
   424   00109C  82A6               	bsf	166,1,c	;volsfr
   425   00109E                     l17:
   426   00109E  B2A6               	btfsc	166,1,c	;volsfr
   427   0010A0  EF54  F008         	goto	u351
   428   0010A4  EF56  F008         	goto	u350
   429   0010A8                     u351:
   430   0010A8  EF4F  F008         	goto	l17
   431   0010AC                     u350:
   432   0010AC                     
   433                           ;MCAL/EEPROM/mcal_eeprom.c: 40:     (EECON1bits.WREN = 0);
   434   0010AC  94A6               	bcf	166,2,c	;volsfr
   435                           
   436                           ;MCAL/EEPROM/mcal_eeprom.c: 43:     INTCONbits.GIE = state_interrupt;
   437   0010AE  B022               	btfsc	EEPROM_WriteByte@state_interrupt^0,0,c
   438   0010B0  D002               	bra	u365
   439   0010B2  9EF2               	bcf	242,7,c	;volatile
   440   0010B4  D001               	bra	u366
   441   0010B6                     u365:
   442   0010B6  8EF2               	bsf	242,7,c	;volatile
   443   0010B8                     u366:
   444   0010B8  0012               	return		;funcret
   445   0010BA                     __end_of_EEPROM_WriteByte:
   446                           	callstack 0
   447                           
   448 ;; *************** function _EEPROM_ReadByte *****************
   449 ;; Defined at:
   450 ;;		line 48 in file "MCAL/EEPROM/mcal_eeprom.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;  address         2    0[COMRAM] unsigned short 
   453 ;;  data            1    2[COMRAM] PTR unsigned char 
   454 ;;		 -> readData(1), 
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  ret             1    0        unsigned char 
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      unsigned char 
   459 ;; Registers used:
   460 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   466 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;Total ram usage:        3 bytes
   471 ;; Hardware stack levels used: 1
   472 ;; This function calls:
   473 ;;		Nothing
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text3
   480   0010BA                     __ptext3:
   481                           	callstack 0
   482   0010BA                     _EEPROM_ReadByte:
   483                           	callstack 30
   484   0010BA                     
   485                           ;MCAL/EEPROM/mcal_eeprom.c: 51:     if(((void*)0) == data){
   486   0010BA  5021               	movf	EEPROM_ReadByte@data^0,w,c
   487   0010BC  A4D8               	btfss	status,2,c
   488   0010BE  EF63  F008         	goto	u371
   489   0010C2  EF65  F008         	goto	u370
   490   0010C6                     u371:
   491   0010C6  EF67  F008         	goto	l1069
   492   0010CA                     u370:
   493   0010CA                     
   494                           ;MCAL/EEPROM/mcal_eeprom.c: 53:     }
   495   0010CA  EF76  F008         	goto	l25
   496   0010CE                     l1069:
   497   0010CE                     
   498                           ;MCAL/EEPROM/mcal_eeprom.c: 57:         EEADRH = (uint8)((address >> 8) & 0x03);
   499   0010CE  5020               	movf	(EEPROM_ReadByte@address+1)^0,w,c
   500   0010D0  0B03               	andlw	3
   501   0010D2  6EAA               	movwf	170,c	;volatile
   502   0010D4                     
   503                           ;MCAL/EEPROM/mcal_eeprom.c: 58:         EEADR = (((uint8)address) & 0xFF);
   504   0010D4  C01F  FFA9         	movff	EEPROM_ReadByte@address,4009	;volatile
   505   0010D8                     
   506                           ;MCAL/EEPROM/mcal_eeprom.c: 61:         (EECON1bits.EEPGD = 0);
   507   0010D8  9EA6               	bcf	166,7,c	;volsfr
   508   0010DA                     
   509                           ;MCAL/EEPROM/mcal_eeprom.c: 63:         (EECON1bits.CFGS = 0);
   510   0010DA  9CA6               	bcf	166,6,c	;volsfr
   511   0010DC                     
   512                           ;MCAL/EEPROM/mcal_eeprom.c: 66:         (EECON1bits.RD = 1);
   513   0010DC  80A6               	bsf	166,0,c	;volsfr
   514   0010DE                     
   515                           ;MCAL/EEPROM/mcal_eeprom.c: 69:         __nop(); __nop();
   516   0010DE  0000               	nop	
   517   0010E0  0000               	nop	
   518   0010E2                     
   519                           ;MCAL/EEPROM/mcal_eeprom.c: 72:         *data = EEDATA;
   520   0010E2  5021               	movf	EEPROM_ReadByte@data^0,w,c
   521   0010E4  6ED9               	movwf	fsr2l,c
   522   0010E6  6ADA               	clrf	fsr2h,c
   523   0010E8  CFA8 FFDF          	movff	4008,indf2	;volatile
   524   0010EC                     l25:
   525   0010EC  0012               	return		;funcret
   526   0010EE                     __end_of_EEPROM_ReadByte:
   527                           	callstack 0
   528                           
   529                           	psect	smallconst
   530   001000                     __psmallconst:
   531                           	callstack 0
   532   001000  00                 	db	0
   533   001001  00                 	db	0	; dummy byte at the end
   534   000000                     
   535                           	psect	rparam
   536   000000                     tosu	equ	0xFFF
   537                           tosh	equ	0xFFE
   538                           tosl	equ	0xFFD
   539                           stkptr	equ	0xFFC
   540                           pclatu	equ	0xFFB
   541                           pclath	equ	0xFFA
   542                           pcl	equ	0xFF9
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           prodh	equ	0xFF4
   548                           prodl	equ	0xFF3
   549                           indf0	equ	0xFEF
   550                           postinc0	equ	0xFEE
   551                           postdec0	equ	0xFED
   552                           preinc0	equ	0xFEC
   553                           plusw0	equ	0xFEB
   554                           fsr0h	equ	0xFEA
   555                           fsr0l	equ	0xFE9
   556                           wreg	equ	0xFE8
   557                           indf1	equ	0xFE7
   558                           postinc1	equ	0xFE6
   559                           postdec1	equ	0xFE5
   560                           preinc1	equ	0xFE4
   561                           plusw1	equ	0xFE3
   562                           fsr1h	equ	0xFE2
   563                           fsr1l	equ	0xFE1
   564                           bsr	equ	0xFE0
   565                           indf2	equ	0xFDF
   566                           postinc2	equ	0xFDE
   567                           postdec2	equ	0xFDD
   568                           preinc2	equ	0xFDC
   569                           plusw2	equ	0xFDB
   570                           fsr2h	equ	0xFDA
   571                           fsr2l	equ	0xFD9
   572                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      6      38
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    EEPROM_ReadByte@data	PTR unsigned char  size(1) Largest target is 1
		 -> readData(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(BITBIGSFRlllh[1]), TRISC(BITBIGSFRlllh[1]), TRISD(BITBIGSFRlllh[1]), 
		 -> TRISE(BITBIGSFRlllh[1]), 


Critical Paths under _main in COMRAM

    _main->_EEPROM_WriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     801
                                              4 COMRAM     2     2      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
                     _initialization
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WriteByte                                     5     2      3     400
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _EEPROM_ReadByte                                      4     1      3     401
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_ReadByte
   _EEPROM_WriteByte
   _initialization

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      42        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      6      26       1       29.9%
BITBIGSFRlh         47      0       0      37        0.0%
BITBIGSFRlllh        F      0       0      38        0.0%
BITBIGSFRh           D      0       0      36        0.0%
BITBIGSFRllllh       4      0       0      39        0.0%
BITBIGSFRlllll       4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      26      41        0.0%
DATA                 0      0      26       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Sep 14 09:53:11 2024

                             l20 10B8                               l25 10EC                               l17 109E  
                             l19 10AC                              l153 113A                              u350 10AC  
                            u351 10A8                              u370 10CA                              u371 10C6  
                            u380 106A                              u365 10B6                              u381 1066  
                            u366 10B8                              u397 102C                              wreg 0FE8  
                           l1101 1058                             l1103 106A                             l1041 1076  
                           l1051 108C                             l1043 1076                             l1061 1098  
                           l1053 108E                             l1045 107E                             l1071 10CE  
                           l1063 109C                             l1055 1090                             l1047 1084  
                           l1081 10DE                             l1073 10D4                             l1065 10BA  
                           l1057 1092                             l1049 1088                             l1083 10E0  
                           l1075 10D8                             l1067 10CA                             l1059 1094  
                           l1091 1006                             l1085 10E2                             l1077 10DA  
                           l1069 10CE                             l1093 1014                             l1079 10DC  
                           l1095 1022                             l1097 103A                             l1089 1002  
                           l1099 104A                             _LATA 0F89                             _LATB 0F8A  
                           _LATC 0F8B                             _LATD 0F8C                             _LATE 0F8D  
               ??_initialization 001F                             _main 1002                             fsr2h 0FDA  
                           indf2 0FDF                             fsr1l 0FE1                             fsr2l 0FD9  
           EEPROM_WriteByte@data 0021                             start 0000                     ___param_bank 0000  
                          ?_main 001F                            _EEADR 0FA9                            _PORTA 0F80  
                          _PORTB 0F81                            _PORTC 0F82                            _PORTD 0F83  
                          _PORTE 0F84                            _TRISA 0F92                            _TRISB 0F93  
                          _TRISC 0F94                            _TRISD 0F95                            _TRISE 0F96  
                          tablat 0FF5                            status 0FD8                  __initialization 10EE  
                   __end_of_main 1076                    _lat_registers 0001                           ??_main 0023  
                  __activetblptr 0002                           _EEADRH 0FAA                           _EEDATA 0FA8  
                         _EECON2 0FA7                ??_EEPROM_ReadByte 0022                           isa$std 0001  
       __end_of_EEPROM_WriteByte 10BA                     __pdataCOMRAM 0001                     __mediumconst 0000  
                         tblptrh 0FF7                           tblptrl 0FF6                           tblptru 0FF8  
                     __accesstop 0080          __end_of__initialization 1112                    ___rparam_used 0001  
                 __pcstackCOMRAM 001F                   _tris_registers 0015                          __Hparam 0000  
                        __Lparam 0000                     __psmallconst 1000                          __pcinit 10EE  
                        __ramtop 1000                          __ptext0 1002                          __ptext1 113A  
                        __ptext2 1076                          __ptext3 10BA           EEPROM_ReadByte@address 001F  
        EEPROM_WriteByte@address 001F             end_of_initialization 1112                    __Lmediumconst 0000  
                _EEPROM_ReadByte 10BA                          postdec1 0FE5                          postinc0 0FEE  
              ?_EEPROM_WriteByte 001F               ??_EEPROM_WriteByte 0022                    __pidataCOMRAM 111C  
            start_initialization 10EE          __end_of_EEPROM_ReadByte 10EE                      __pbssCOMRAM 0025  
                 _initialization 113A                      __smallconst 1000                 ?_EEPROM_ReadByte 001F  
         __end_of_initialization 113C                        _writeData 0025                        copy_data0 1102  
                     _EECON1bits 0FA6                         __Hrparam 0000                  ?_initialization 001F  
                       __Lrparam 0000                         _readData 0026                         isa$xinst 0000  
                     _INTCONbits 0FF2              EEPROM_ReadByte@data 0021                   _port_registers 000B  
EEPROM_WriteByte@state_interrupt 0022                 _EEPROM_WriteByte 1076  
